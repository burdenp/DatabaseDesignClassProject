import MySQLdbimport Tkinterhost = raw_input("Enter Host")user = raw_input("Enter user")password = raw_input("Enter password")dbName = raw_input("Enter DB name")db = MySQLdb.connect(host, user, password, dbName)#db is the mysql databasec = db.cursor()class lolDBApp_tk(Tkinter.Tk):    def __init__(self,parent):        Tkinter.Tk.__init__(self,parent)        self.parent = parent        self.initialize()    def initialize(self):          self.grid()                    button1 = Tkinter.Button(self,text=u"Add another champion",                                command=self.OnButton1Click)          button1.grid(column=0,row=1)          button2 = Tkinter.Button(self,text=u"Run Simulation",                                command=self.OnButton2Click)          button2.grid(column=2,row=1)          button3 = Tkinter.Button(self,text=u"Remove a champion",                                command=self.OnButton3Click)          button3.grid(column=1,row=1)          self.labelVariable = Tkinter.StringVar()          label = Tkinter.Label(self,textvariable=self.labelVariable,                              anchor="w",fg="white",bg="blue")          label.grid(column=0,row=0,columnspan=2,sticky='EW')          self.labelVariable.set(u"LoL Simulator")          self.grid_columnconfigure(0,weight=1)          self.resizable(True,False)          self.update()          self.geometry(self.geometry())            def OnButton1Click(self):        champName = raw_input("Champions name")        champTitle = raw_input("Champions title")        champLore = raw_input("Champions Lore")        champTags = raw_input("Champions tags")        champAttack = raw_input("Champions attack")        champHealth = raw_input("Champions health")        champDiff = raw_input("Champions difficulty")        champSpells = raw_input("Champions spells")        c.execute("""SELECT MAX(id) FROM champions""")        r = c.fetchone()[0] +1        c.execute("""INSERT INTO champions(id, name, title, lore, tags, attack,        health, difficulty, spells)        VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)""",        (r, champName, champTitle, champLore, champTags, champAttack,         champHealth, champDiff, champSpells))        champAbility1Name = raw_input("ability name")        champAbility1descip = raw_input("ability desciption")        champAbility1effect = raw_input("ability effect")        champAbility1cost = raw_input("ability cost")        champAbility1range = raw_input("ability range")        champAbility2Name = raw_input("ability name")        champAbility2descip = raw_input("ability desciption")        champAbility2effect = raw_input("ability effect")        champAbility2cost = raw_input("ability cost")        champAbility2range = raw_input("ability range")        champAbility3Name = raw_input("ability name")        champAbility3descip = raw_input("ability desciption")        champAbility3effect = raw_input("ability effect")        champAbility3cost = raw_input("ability cost")        champAbility3range = raw_input("ability range")        champAbility4Name = raw_input("ability name")        champAbility4descip = raw_input("ability desciption")        champAbility4effect = raw_input("ability effect")        champAbility4cost = raw_input("ability cost")        champAbility4range = raw_input("ability range")        champAbility5Name = raw_input("ability name")        champAbility5descip = raw_input("ability desciption")        champAbility5effect = raw_input("ability effect")        champAbility5cost = raw_input("ability cost")        champAbility5range = raw_input("ability range")        c.executemany("""INSERT INTO champion_abilities(id, champion, name,        description, effect, cost,range)        VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s)""",        [        (r, champAbility1Name,champAbility1descip,champAbility1effect,           champAbility1cost,champAbility1range)        (r, champAbility2Name,champAbility2descip,champAbility2effect,           champAbility2cost,champAbility2range)        (r, champAbility3Name,champAbility3descip,champAbility3effect,           champAbility3cost,champAbility3range)        (r, champAbility4Name,champAbility4descip,champAbility4effect,           champAbility4cost,champAbility4range)        (r, champAbility5Name,champAbility5descip,champAbility5effect,           champAbility5cost,champAbility5range)        ] )        champstatsHealth = raw_input("amount of health")        champstatsHealthperLvl = raw_input("amount of health per level")        champstatsMana = raw_input("amount of mana")        champstatsManaperLvl = raw_input("amount of mana per level")        champstatsMS = raw_input("amount of movespeed")        champstatsMSperLvl = raw_input("amount of movespeed per level")        champstatsArmor = raw_input("amount of armor")        champstatsArmorperLvl = raw_input("amount of armor per level")        champstatsMR = raw_input("amount of magic resist")        champstatsMRperLvl = raw_input("amount of magic resist per level")        champstatsHealthregen = raw_input("amount of health regen")        champstatsHealthregenperLvl = raw_input("amount of health regen per level")        champstatsManaregen = raw_input("amount of mana regen")        champstatsManaregenperLvl = raw_input("amount of mana Regen per level")        champstatsDamage = raw_input("amount of damage")        champstatsDamageperLvl = raw_input("amount of damage per level")        c.executemany("""INSERT INTO champion_stats(champion, name, value,        modifier)        VALUES (%s, %s, %s, %s)""",        [        (r, "Damage",champstatsDamage,champstatsDamageperLvl)        (r, "Health",champstatsHealth,champstatsHealthperLvl)        (r, "Mana" ,champstatsMana,champstatsManaperLvl)                (r, "Move Speed",champstatsMS,champstatsMSperLvl)        (r, "Armor",champstatsArmor,champstatsArmorperLvl)        (r, "Spell Block",champstatsMR,champstatsMRperLvl)        (r, "Health Regen",champstatsHealthregen,champstatsHealthregenperLvl)        (r, "Mana Regen",champstatsManaregen,champstatsManaregenperLvl)        ] )             def OnButton2Click(self):        player1Champ = raw_input("Name of first champion")        player2Champ = raw_input("Name of second champion")        player1Item1 = raw_input("Name of Champion A's first Item, leave blank for an empty item slot")        player1Item2 = raw_input("Name of Champion A's second Item, leave blank for an empty item slot")        player1Item3 = raw_input("Name of Champion A's third Item, leave blank for an empty item slot")        player1Item4 = raw_input("Name of Champion A's fourth Item, leave blank for an empty item slot")        player1Item5 = raw_input("Name of Champion A's fifth Item, leave blank for an empty item slot")        player1Item6 = raw_input("Name of Champion A's sixth Item, leave blank for an empty item slot")        player2Item1 = raw_input("Name of Champion B's first Item, leave blank for an empty item slot")        player2Item2 = raw_input("Name of Champion B's second Item, leave blank for an empty item slot")        player2Item3 = raw_input("Name of Champion B's third Item, leave blank for an empty item slot")        player2Item4 = raw_input("Name of Champion B's fourth Item, leave blank for an empty item slot")        player2Item5 = raw_input("Name of Champion B's fifth Item, leave blank for an empty item slot")        player2Item6 = raw_input("Name of Champion B's sixth Item, leave blank for an empty item slot")        player1Lvl = int(raw_input("First champion's level"))        player2Lvl = int(raw_input("Second champion's level"))        c.execute("""SELECT id FROM champions WHERE name = %s""", (player1Champ,))        ID1 = c.fetchone()        c.execute("""SELECT id FROM champions WHERE name = %s""", (player2Champ,))        ID2 = c.fetchone()        c.execute("""SELECT value FROM champion_stats WHERE champion = %s""", (ID1[0],))        champ1stats = c.fetchall()        c.execute("""SELECT modifier FROM champion_stats WHERE champion = %s""", (ID1[0],))        champ1mod = c.fetchall()        c.execute("""SELECT value FROM champion_stats WHERE champion = %s""", (ID2[0],))        champ2stats = c.fetchall()        c.execute("""SELECT modifier FROM champion_stats WHERE champion = %s""", (ID2[0],))        champ2mod = c.fetchall()        tmp1 =[]        tmp2 =[]        tmp3 =[]        tmp4 =[]        for i in range(len(champ1stats)):          if champ1stats[i][0] == '':              temp = 0          else:              temp = float (champ1stats[i][0])          tmp1.append(temp)        for i in range(len(champ1mod)):          if champ1mod[i][0] == '':              temp = 0          else:              temp = float (champ1mod[i][0])          tmp1.append(temp)        for i in range(len(champ2stats)):          if champ2stats[i][0] == '':              temp = 0          else:              temp = float (champ2stats[i][0])          tmp1.append(temp)        for i in range(len(champ2mod)):          if champ2mod[i][0] == '':              temp = 0          else:              temp = float (champ2mod[i][0])          tmp1.append(temp)        champ1stats = tmp1        champ1mod = tmp2        champ2stats = tmp3        champ2mod = tmp4            champ1FinalStats = [champ1stats[0] + (champ1mod[0] * player1Lvl),                            champ1stats[1] + (champ1mod[1] * player1Lvl),                            champ1stats[2] + (champ1mod[2] * player1Lvl),                            champ1stats[3] + (champ1mod[3] * player1Lvl),                            champ1stats[4] + (champ1mod[4] * player1Lvl),                            champ1stats[5] + (champ1mod[5] * player1Lvl),                            champ1stats[6] + (champ1mod[6] * player1Lvl),                            champ1stats[7] + (champ1mod[6] * player1Lvl)]        champ2FinalStats = [champ2stats[0] + (champ2mod[0] * player2Lvl),                            champ2stats[1] + (champ2mod[1] * player2Lvl),                            champ2stats[2] + (champ2mod[2] * player2Lvl),                            champ2stats[3] + (champ2mod[3] * player2Lvl),                            champ2stats[4] + (champ2mod[4] * player2Lvl),                            champ2stats[5] + (champ2mod[5] * player2Lvl),                            champ2stats[6] + (champ2mod[6] * player2Lvl),                            champ2stats[7] + (champ2mod[7] * player2Lvl)]        print champ1FinalStats        print champ2FinalStats        while champ1FinalStats[1] > 0 and champ2FinalStats[1] > 0:            champ1FinalStats[1] = champ1FinalStats[1] - champ2FinalStats[0] * (champ1FinalStats[4] /100)            champ1FinalStats[1] = champ2FinalStats[1] - champ2FinalStats[0] * (champ1FinalStats[4] /100)        if champ1FinalStats[1] < 0:           print player2Champ + "wins"        else: print player1Champ + "wins"    def OnButton3Click(self):        x = raw_input("Which champion do you want to delete")        c.execute("""DELETE FROM champions WHERE name = %s""", (x,))if __name__ == "__main__":    app = lolDBApp_tk(None)    app.title(' LoL DB application')    app.mainloop()